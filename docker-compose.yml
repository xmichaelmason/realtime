services:
  # MongoDB for queryable metadata
  mongodb:
    image: mongo:6.0
    container_name: realtime-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
    volumes:
      - mongodb_data:/data/db
    networks:
      - realtime-network

  # Redis for pub/sub scaling (optional)
  redis:
    image: redis:7-alpine
    container_name: realtime-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - redis_data:/data
    networks:
      - realtime-network

  # coturn STUN/TURN server
  coturn:
    image: coturn/coturn:latest
    container_name: realtime-coturn
    restart: unless-stopped
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/udp"
      - "5349:5349/tcp"
      - "49152-49200:49152-49200/udp"  # Smaller UDP range
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf:ro
      - ./coturn/certs:/etc/coturn/certs:ro
    networks:
      - realtime-network
    environment:
      - TURN_SECRET=${TURN_SECRET:-your-turn-secret}

  # WebSocket server with y-websocket and LevelDB persistence
  websocket-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: realtime-websocket
    restart: unless-stopped
    ports:
      - "1234:1234"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
      - MONGO_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/realtime?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-password}@redis:6379
      - LEVELDB_PATH=/app/data/yjs-data
      - PORT=1234
    volumes:
      - yjs_data:/app/data
    depends_on:
      - mongodb
      - redis
    networks:
      - realtime-network

  # WebRTC signaling server
  signaling-server:
    build:
      context: ./signaling
      dockerfile: Dockerfile
    container_name: realtime-signaling
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
      - TURN_SECRET=${TURN_SECRET:-your-turn-secret}
      - COTURN_HOST=coturn
      - PORT=3001
    depends_on:
      - coturn
    networks:
      - realtime-network

  # Frontend development server (for development only)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: realtime-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_WS_SERVER_URL=ws://localhost:1234
      - VITE_SIGNALING_SERVER_URL=ws://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - realtime-network

volumes:
  mongodb_data:
  redis_data:
  yjs_data:

networks:
  realtime-network:
    driver: bridge
